// const TelegramApi = require('node-telegram-bot-api')

// require('dotenv').config();

// const token = process.env.TELEGRAM_TOKEN;


// const bot = new TelegramApi(token, {polling: true})

// const chats = {}

// // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç 0 –¥–æ 9
// const gameOptions = {
//   reply_markup: {
//     inline_keyboard: [
//       [{ text: '0', callback_data: '0' }, { text: '1', callback_data: '1' }, { text: '2', callback_data: '2' }],
//       [{ text: '3', callback_data: '3' }, { text: '4', callback_data: '4' }, { text: '5', callback_data: '5' }],
//       [{ text: '6', callback_data: '6' }, { text: '7', callback_data: '7' }, { text: '8', callback_data: '8' }],
//       [{ text: '9', callback_data: '9' }]
//     ]
//   }
// };

// // –ö–Ω–æ–ø–∫–∞ "–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
// const againOptions = {
//   reply_markup: {
//     inline_keyboard: [
//       [{ text: '–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data: '/again' }]
//     ]
//   }
// };

// const startGame = async (chatId) => {
//   await bot.sendMessage(chatId, '–Ø —Å–µ–π—á–∞—Å –∑–∞–≥–∞–¥–∞—é —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 9, –∞ —Ç—ã –¥–æ–ª–∂–µ–Ω –µ—ë —É–≥–∞–¥–∞—Ç—å!');
//   const randomNumber = Math.floor(Math.random() * 10);
//   chats[chatId] = randomNumber;
//   await bot.sendMessage(chatId, '–û—Ç–≥–∞–¥—ã–≤–∞–π!', gameOptions);
// };

// const start = () => {
//   bot.setMyCommands([
//     { command: '/start', description: '–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' },
//     { command: '/info', description: '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ' },
//     { command: '/game', description: '–ò–≥—Ä–∞ —É–≥–∞–¥–∞–π —Ü–∏—Ñ—Ä—É' }
//   ]);

//   bot.on('message', async msg => {
//     const text = msg.text;
//     const chatId = msg.chat.id;

//     if (text === '/start') {
//       await bot.sendSticker(chatId, 'https://cdn.tlgrm.ru/stickers/463/343/46334338-7539-4dae-bfb6-29e0bb04dc2d/192/9.webp');
//       return bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º-–∫–∞–Ω–∞–ª U');
//     }

//     if (text === '/info') {
//       return bot.sendMessage(chatId, `T–µ–±—è –∑–æ–≤—É—Ç ${msg.from.first_name} (@${msg.from.username || '–Ω–µ—Ç username'})`);
//     }

//     if (text === '/game') {
//       return startGame(chatId);
//     }

//     return bot.sendMessage(chatId, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!');
//   });

//   // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
//   bot.on('callback_query', async msg => {
//     const data = msg.data;
//     const chatId = msg.message.chat.id;

//     // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
//     if (data === '/again') {
//       return startGame(chatId);
//     }

//     // —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∑–∞–≥–∞–¥–∞–Ω–Ω—ã–º —á–∏—Å–ª–æ–º
//     if (parseInt(data) === chats[chatId]) {
//       await bot.sendMessage(chatId, `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É ${chats[chatId]}!`, againOptions);
//     } else {
//       await bot.sendMessage(chatId, `‚ùå –£–≤—ã, –Ω–µ —É–≥–∞–¥–∞–ª. –ë–æ—Ç –∑–∞–≥–∞–¥–∞–ª ${chats[chatId]}.`, againOptions);
//     }
//   });
// };

// start();

const TelegramApi = require('node-telegram-bot-api');
const express = require('express');
require('dotenv').config();

const token = process.env.TELEGRAM_TOKEN;
const WEBHOOK_URL = process.env.WEBHOOK_URL; // –ù–∞–ø—Ä–∏–º–µ—Ä, https://your-app.up.railway.app

const app = express();
app.use(express.json());

const bot = new TelegramApi(token, {
  webHook: {
    port: process.env.PORT || 3000,
  },
});

const chats = {};

// –ö–Ω–æ–ø–∫–∏ –æ—Ç 0 –¥–æ 9
const gameOptions = {
  reply_markup: {
    inline_keyboard: [
      [{ text: '0', callback_data: '0' }, { text: '1', callback_data: '1' }, { text: '2', callback_data: '2' }],
      [{ text: '3', callback_data: '3' }, { text: '4', callback_data: '4' }, { text: '5', callback_data: '5' }],
      [{ text: '6', callback_data: '6' }, { text: '7', callback_data: '7' }, { text: '8', callback_data: '8' }],
      [{ text: '9', callback_data: '9' }],
    ],
  },
};

// –ö–Ω–æ–ø–∫–∞ "–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
const againOptions = {
  reply_markup: {
    inline_keyboard: [[{ text: '–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data: '/again' }]],
  },
};

const startGame = async (chatId) => {
  await bot.sendMessage(chatId, '–Ø —Å–µ–π—á–∞—Å –∑–∞–≥–∞–¥–∞—é —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 9, –∞ —Ç—ã –¥–æ–ª–∂–µ–Ω –µ—ë —É–≥–∞–¥–∞—Ç—å!');
  const randomNumber = Math.floor(Math.random() * 10);
  chats[chatId] = randomNumber;
  await bot.sendMessage(chatId, '–û—Ç–≥–∞–¥—ã–≤–∞–π!', gameOptions);
};

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook (–¥–µ–ª–∞–π —ç—Ç–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ)
bot.setWebHook(`${WEBHOOK_URL}/bot${token}`).then(() => {
  console.log('Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞:', `${WEBHOOK_URL}/bot${token}`);
}).catch(console.error);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram
app.post(`/bot${token}`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200);
});

// –ö–æ–º–∞–Ω–¥—ã –∏ –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞
bot.setMyCommands([
  { command: '/start', description: '–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' },
  { command: '/info', description: '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ' },
  { command: '/game', description: '–ò–≥—Ä–∞ —É–≥–∞–¥–∞–π —Ü–∏—Ñ—Ä—É' },
]);

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (text === '/start') {
    await bot.sendSticker(chatId, 'https://cdn.tlgrm.ru/stickers/463/343/46334338-7539-4dae-bfb6-29e0bb04dc2d/192/9.webp');
    return bot.sendMessage(chatId, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º-–∫–∞–Ω–∞–ª U');
  }

  if (text === '/info') {
    return bot.sendMessage(chatId, `T–µ–±—è –∑–æ–≤—É—Ç ${msg.from.first_name} (@${msg.from.username || '–Ω–µ—Ç username'})`);
  }

  if (text === '/game') {
    return startGame(chatId);
  }

  return bot.sendMessage(chatId, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!');
});

bot.on('callback_query', async (msg) => {
  const chatId = msg.message.chat.id;
  const data = msg.data;

  if (data === '/again') {
    return startGame(chatId);
  }

  if (parseInt(data) === chats[chatId]) {
    await bot.sendMessage(chatId, `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É ${chats[chatId]}!`, againOptions);
  } else {
    await bot.sendMessage(chatId, `‚ùå –£–≤—ã, –Ω–µ —É–≥–∞–¥–∞–ª. –ë–æ—Ç –∑–∞–≥–∞–¥–∞–ª ${chats[chatId]}.`, againOptions);
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º Express —Å–µ—Ä–≤–µ—Ä
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
